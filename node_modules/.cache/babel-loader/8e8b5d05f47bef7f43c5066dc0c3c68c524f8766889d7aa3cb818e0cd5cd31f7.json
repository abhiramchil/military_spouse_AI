{"ast":null,"code":"import _objectSpread from\"/Users/cyrus/Documents/Fall 2025/VIP/military_spouse_AI/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{forwardRef,useCallback,useEffect,useImperativeHandle,useRef,useState}from'react';import ChatInterface from'./ChatInterface';import{jsx as _jsx}from\"react/jsx-runtime\";const defaultTransformResponse=payload=>{if(!payload)return'';if(typeof payload==='string')return payload;if(typeof payload==='object'){var _ref,_ref2,_ref3,_payload$reply;return(_ref=(_ref2=(_ref3=(_payload$reply=payload.reply)!==null&&_payload$reply!==void 0?_payload$reply:payload.response)!==null&&_ref3!==void 0?_ref3:payload.answer)!==null&&_ref2!==void 0?_ref2:payload.output)!==null&&_ref!==void 0?_ref:'';}return'';};const defaultBuildRequestPayload=_ref4=>{let{message,history,metadata}=_ref4;const base={message};if(history&&Array.isArray(history)){base.history=history;}return metadata?_objectSpread(_objectSpread({},base),metadata):base;};const generateId=()=>{var _globalThis$crypto;if(typeof globalThis!=='undefined'&&(_globalThis$crypto=globalThis.crypto)!==null&&_globalThis$crypto!==void 0&&_globalThis$crypto.randomUUID){return globalThis.crypto.randomUUID();}return\"msg_\".concat(Math.random().toString(36).slice(2,10));};const normalizeMessage=function(message){var _message$id,_message$type,_message$content,_message$timestamp;let fallbackType=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'system';return{id:(_message$id=message.id)!==null&&_message$id!==void 0?_message$id:generateId(),type:(_message$type=message.type)!==null&&_message$type!==void 0?_message$type:fallbackType,content:(_message$content=message.content)!==null&&_message$content!==void 0?_message$content:'',timestamp:(_message$timestamp=message.timestamp)!==null&&_message$timestamp!==void 0?_message$timestamp:new Date().toISOString()};};const defaultWelcomeMessage={type:'bot',content:\"Hello! I'm your AI career assistant. Ask me anything about job searches, resumes, or resources for military families.\"};const getStartingMessages=source=>source&&source.length?source.map(msg=>normalizeMessage(msg,'bot')):[normalizeMessage(defaultWelcomeMessage,'bot')];const toHistory=messages=>messages.filter(msg=>msg.type==='user'||msg.type==='bot').map(msg=>({role:msg.type==='user'?'user':'assistant',content:msg.content}));const RagChatWidget=/*#__PURE__*/forwardRef((_ref5,ref)=>{let{apiUrl,headers={},initialMessages=[],transformResponse=defaultTransformResponse,buildRequestPayload=defaultBuildRequestPayload,metadata,includeHistory=true,fetcher,resetOnInitialMessagesChange=false,placeholder,maxLength,onError,onMessageAppended}=_ref5;const[messages,setMessages]=useState(()=>getStartingMessages(initialMessages));const[isLoading,setIsLoading]=useState(false);const[error,setError]=useState(null);const[pendingRetry,setPendingRetry]=useState(null);const messagesRef=useRef(messages);useEffect(()=>{messagesRef.current=messages;},[messages]);useEffect(()=>{if(!resetOnInitialMessagesChange||!initialMessages.length)return;const normalized=getStartingMessages(initialMessages);messagesRef.current=normalized;setMessages(normalized);},[initialMessages,resetOnInitialMessagesChange]);const fetchClient=fetcher!==null&&fetcher!==void 0?fetcher:fetch;const sendMessage=useCallback(async rawText=>{const trimmed=rawText.trim();if(!trimmed){return;}const userMessage=normalizeMessage({type:'user',content:trimmed},'user');const nextMessages=[...messagesRef.current,userMessage];messagesRef.current=nextMessages;setMessages(nextMessages);setIsLoading(true);setError(null);setPendingRetry(null);if(!apiUrl){const missingUrlMessage='Missing apiUrl for RagChatWidget. Provide the endpoint of your Python RAG service.';setError(missingUrlMessage);setPendingRetry({message:trimmed,userMessageId:userMessage.id});setIsLoading(false);return;}const historyPayload=includeHistory?toHistory(nextMessages):undefined;const requestBody=buildRequestPayload({message:trimmed,history:historyPayload,metadata});try{const response=await fetchClient(apiUrl,{method:'POST',headers:_objectSpread({'Content-Type':'application/json'},headers),body:JSON.stringify(requestBody)});if(!response.ok){const errorText=await response.text();throw new Error(errorText||\"Request failed with status \".concat(response.status));}const data=await response.json().catch(()=>{throw new Error('Received invalid JSON from the chatbot service.');});const reply=transformResponse(data,{message:trimmed,history:historyPayload});if(reply===undefined||reply===null){throw new Error('The chatbot returned an empty response. Adjust transformResponse or check the backend payload.');}const replyText=typeof reply==='string'?reply:String(reply!==null&&reply!==void 0?reply:'');if(!replyText.trim()){throw new Error('The chatbot returned an empty response. Adjust transformResponse or check the backend payload.');}const botMessage=normalizeMessage({type:'bot',content:replyText},'bot');const resolvedMessages=[...messagesRef.current,botMessage];messagesRef.current=resolvedMessages;setMessages(resolvedMessages);onMessageAppended===null||onMessageAppended===void 0?void 0:onMessageAppended(botMessage,resolvedMessages);}catch(err){const fallbackMessage=err instanceof Error?err.message:'Unable to reach the chatbot service.';setError(fallbackMessage);setPendingRetry({message:trimmed,userMessageId:userMessage.id});onError===null||onError===void 0?void 0:onError(err);}finally{setIsLoading(false);}},[apiUrl,buildRequestPayload,fetchClient,headers,includeHistory,metadata,onError,onMessageAppended,transformResponse]);const retryLastMessage=useCallback(()=>{if(!pendingRetry)return;const filtered=messagesRef.current.filter(msg=>msg.id!==pendingRetry.userMessageId);messagesRef.current=filtered;setMessages(filtered);const messageToResend=pendingRetry.message;setPendingRetry(null);sendMessage(messageToResend);},[pendingRetry,sendMessage]);const resetConversation=useCallback(()=>{const normalized=getStartingMessages(initialMessages);messagesRef.current=normalized;setMessages(normalized);setError(null);setPendingRetry(null);},[initialMessages]);useImperativeHandle(ref,()=>({sendMessage,resetConversation,getMessages:()=>messagesRef.current}),[resetConversation,sendMessage]);return/*#__PURE__*/_jsx(ChatInterface,{messages:messages,onSendMessage:sendMessage,isTyping:isLoading,error:error,onRetry:pendingRetry?retryLastMessage:null,inputDisabled:isLoading,placeholder:placeholder,maxLength:maxLength});});export default RagChatWidget;","map":{"version":3,"names":["React","forwardRef","useCallback","useEffect","useImperativeHandle","useRef","useState","ChatInterface","jsx","_jsx","defaultTransformResponse","payload","_ref","_ref2","_ref3","_payload$reply","reply","response","answer","output","defaultBuildRequestPayload","_ref4","message","history","metadata","base","Array","isArray","_objectSpread","generateId","_globalThis$crypto","globalThis","crypto","randomUUID","concat","Math","random","toString","slice","normalizeMessage","_message$id","_message$type","_message$content","_message$timestamp","fallbackType","arguments","length","undefined","id","type","content","timestamp","Date","toISOString","defaultWelcomeMessage","getStartingMessages","source","map","msg","toHistory","messages","filter","role","RagChatWidget","_ref5","ref","apiUrl","headers","initialMessages","transformResponse","buildRequestPayload","includeHistory","fetcher","resetOnInitialMessagesChange","placeholder","maxLength","onError","onMessageAppended","setMessages","isLoading","setIsLoading","error","setError","pendingRetry","setPendingRetry","messagesRef","current","normalized","fetchClient","fetch","sendMessage","rawText","trimmed","trim","userMessage","nextMessages","missingUrlMessage","userMessageId","historyPayload","requestBody","method","body","JSON","stringify","ok","errorText","text","Error","status","data","json","catch","replyText","String","botMessage","resolvedMessages","err","fallbackMessage","retryLastMessage","filtered","messageToResend","resetConversation","getMessages","onSendMessage","isTyping","onRetry","inputDisabled"],"sources":["/Users/cyrus/Documents/Fall 2025/VIP/military_spouse_AI/src/components/RagChatWidget.js"],"sourcesContent":["import React, {\n  forwardRef,\n  useCallback,\n  useEffect,\n  useImperativeHandle,\n  useRef,\n  useState\n} from 'react';\nimport ChatInterface from './ChatInterface';\n\nconst defaultTransformResponse = (payload) => {\n  if (!payload) return '';\n  if (typeof payload === 'string') return payload;\n  if (typeof payload === 'object') {\n    return (\n      payload.reply ??\n      payload.response ??\n      payload.answer ??\n      payload.output ??\n      ''\n    );\n  }\n  return '';\n};\n\nconst defaultBuildRequestPayload = ({ message, history, metadata }) => {\n  const base = { message };\n  if (history && Array.isArray(history)) {\n    base.history = history;\n  }\n  return metadata ? { ...base, ...metadata } : base;\n};\n\nconst generateId = () => {\n  if (typeof globalThis !== 'undefined' && globalThis.crypto?.randomUUID) {\n    return globalThis.crypto.randomUUID();\n  }\n  return `msg_${Math.random().toString(36).slice(2, 10)}`;\n};\n\nconst normalizeMessage = (message, fallbackType = 'system') => ({\n  id: message.id ?? generateId(),\n  type: message.type ?? fallbackType,\n  content: message.content ?? '',\n  timestamp: message.timestamp ?? new Date().toISOString()\n});\n\nconst defaultWelcomeMessage = {\n  type: 'bot',\n  content:\n    \"Hello! I'm your AI career assistant. Ask me anything about job searches, resumes, or resources for military families.\"\n};\n\nconst getStartingMessages = (source) =>\n  source && source.length\n    ? source.map((msg) => normalizeMessage(msg, 'bot'))\n    : [normalizeMessage(defaultWelcomeMessage, 'bot')];\n\nconst toHistory = (messages) =>\n  messages\n    .filter((msg) => msg.type === 'user' || msg.type === 'bot')\n    .map((msg) => ({\n      role: msg.type === 'user' ? 'user' : 'assistant',\n      content: msg.content\n    }));\n\nconst RagChatWidget = forwardRef(\n  (\n    {\n      apiUrl,\n      headers = {},\n      initialMessages = [],\n      transformResponse = defaultTransformResponse,\n      buildRequestPayload = defaultBuildRequestPayload,\n      metadata,\n      includeHistory = true,\n      fetcher,\n      resetOnInitialMessagesChange = false,\n      placeholder,\n      maxLength,\n      onError,\n      onMessageAppended\n    },\n    ref\n  ) => {\n    const [messages, setMessages] = useState(() =>\n      getStartingMessages(initialMessages)\n    );\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const [pendingRetry, setPendingRetry] = useState(null);\n\n    const messagesRef = useRef(messages);\n\n    useEffect(() => {\n      messagesRef.current = messages;\n    }, [messages]);\n\n    useEffect(() => {\n      if (!resetOnInitialMessagesChange || !initialMessages.length) return;\n      const normalized = getStartingMessages(initialMessages);\n      messagesRef.current = normalized;\n      setMessages(normalized);\n    }, [initialMessages, resetOnInitialMessagesChange]);\n\n    const fetchClient = fetcher ?? fetch;\n\n    const sendMessage = useCallback(\n      async (rawText) => {\n        const trimmed = rawText.trim();\n        if (!trimmed) {\n          return;\n        }\n\n        const userMessage = normalizeMessage(\n          { type: 'user', content: trimmed },\n          'user'\n        );\n\n        const nextMessages = [...messagesRef.current, userMessage];\n        messagesRef.current = nextMessages;\n        setMessages(nextMessages);\n        setIsLoading(true);\n        setError(null);\n        setPendingRetry(null);\n\n        if (!apiUrl) {\n          const missingUrlMessage =\n            'Missing apiUrl for RagChatWidget. Provide the endpoint of your Python RAG service.';\n          setError(missingUrlMessage);\n          setPendingRetry({\n            message: trimmed,\n            userMessageId: userMessage.id\n          });\n          setIsLoading(false);\n          return;\n        }\n\n        const historyPayload = includeHistory\n          ? toHistory(nextMessages)\n          : undefined;\n\n        const requestBody = buildRequestPayload({\n          message: trimmed,\n          history: historyPayload,\n          metadata\n        });\n\n        try {\n          const response = await fetchClient(apiUrl, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n              ...headers\n            },\n            body: JSON.stringify(requestBody)\n          });\n\n          if (!response.ok) {\n            const errorText = await response.text();\n            throw new Error(\n              errorText || `Request failed with status ${response.status}`\n            );\n          }\n\n          const data = await response.json().catch(() => {\n            throw new Error('Received invalid JSON from the chatbot service.');\n          });\n\n          const reply = transformResponse(data, {\n            message: trimmed,\n            history: historyPayload\n          });\n\n          if (reply === undefined || reply === null) {\n            throw new Error(\n              'The chatbot returned an empty response. Adjust transformResponse or check the backend payload.'\n            );\n          }\n\n          const replyText =\n            typeof reply === 'string' ? reply : String(reply ?? '');\n\n          if (!replyText.trim()) {\n            throw new Error(\n              'The chatbot returned an empty response. Adjust transformResponse or check the backend payload.'\n            );\n          }\n\n          const botMessage = normalizeMessage(\n            { type: 'bot', content: replyText },\n            'bot'\n          );\n\n          const resolvedMessages = [...messagesRef.current, botMessage];\n          messagesRef.current = resolvedMessages;\n          setMessages(resolvedMessages);\n          onMessageAppended?.(botMessage, resolvedMessages);\n        } catch (err) {\n          const fallbackMessage =\n            err instanceof Error\n              ? err.message\n              : 'Unable to reach the chatbot service.';\n          setError(fallbackMessage);\n          setPendingRetry({\n            message: trimmed,\n            userMessageId: userMessage.id\n          });\n          onError?.(err);\n        } finally {\n          setIsLoading(false);\n        }\n      },\n      [\n        apiUrl,\n        buildRequestPayload,\n        fetchClient,\n        headers,\n        includeHistory,\n        metadata,\n        onError,\n        onMessageAppended,\n        transformResponse\n      ]\n    );\n\n    const retryLastMessage = useCallback(() => {\n      if (!pendingRetry) return;\n      const filtered = messagesRef.current.filter(\n        (msg) => msg.id !== pendingRetry.userMessageId\n      );\n      messagesRef.current = filtered;\n      setMessages(filtered);\n      const messageToResend = pendingRetry.message;\n      setPendingRetry(null);\n      sendMessage(messageToResend);\n    }, [pendingRetry, sendMessage]);\n\n    const resetConversation = useCallback(() => {\n      const normalized = getStartingMessages(initialMessages);\n      messagesRef.current = normalized;\n      setMessages(normalized);\n      setError(null);\n      setPendingRetry(null);\n    }, [initialMessages]);\n\n    useImperativeHandle(\n      ref,\n      () => ({\n        sendMessage,\n        resetConversation,\n        getMessages: () => messagesRef.current\n      }),\n      [resetConversation, sendMessage]\n    );\n\n    return (\n      <ChatInterface\n        messages={messages}\n        onSendMessage={sendMessage}\n        isTyping={isLoading}\n        error={error}\n        onRetry={pendingRetry ? retryLastMessage : null}\n        inputDisabled={isLoading}\n        placeholder={placeholder}\n        maxLength={maxLength}\n      />\n    );\n  }\n);\n\nexport default RagChatWidget;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}